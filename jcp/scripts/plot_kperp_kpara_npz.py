#! /usr/bin/env python
import aipy as a, numpy as n, pylab as p, capo as C, optparse, sys

o = optparse.OptionParser()
o.add_option('--fold',action='store_true',
    help='Average negative and positive ks')
opts,args = o.parse_args(sys.argv[1:])

#hardcode ks
ks = n.array([ 0.01337928,  0.06659072,  0.13114983,  0.19615522,  0.26127399,
        0.32643829,  0.39162541,  0.45682556,  0.52203388,  0.58724763,
        0.65246519,  0.71768552,  0.78290793,  0.84813194,  0.9133572 ,
        0.97858347,  1.04381055,  1.10903831,  1.17426662,  1.23949541,
        1.3047246 ,  1.36995413,  1.43518396,  1.50041405,  1.56564437,
        1.63087488,  1.69610557,  1.76133642,  1.8265674 ,  1.89179851,
        1.95702973,  2.02226106,  2.08749248,  2.15272398,  2.21795555,
        2.2831872 ,  2.34841891,  2.41365068,  2.47888251,  2.54411438,
        2.6093463 ,  2.67457826,  2.73981027,  2.80504231,  2.87027438,
        2.93550649,  3.00073863,  3.06597079,  3.13120298,  3.1964352 ,
        3.26166744,  3.3268997 ,  3.39213199,  3.45736429,  3.52259661,
        3.58782895,  3.6530613 ,  3.71829367,  3.78352606,  3.84875845,
        3.91399087,  3.97922329,  4.04445573,  4.10968818,  4.17492064,
        4.24015311,  4.30538559,  4.37061808,  4.43585058,  4.50108308,
        4.5663156 ,  4.63154812,  4.69678066,  4.7620132 ,  4.82724574,
        4.89247829,  4.95771085,  5.02294342,  5.08817599,  5.15340857,
        5.21864115,  5.28387374,  5.34910633,  5.28387374,  5.21864115,
        5.15340857,  5.08817599,  5.02294342,  4.95771085,  4.89247829,
        4.82724574,  4.7620132 ,  4.69678066,  4.63154812,  4.5663156 ,
        4.50108308,  4.43585058,  4.37061808,  4.30538559,  4.24015311,
        4.17492064,  4.10968818,  4.04445573,  3.97922329,  3.91399087,
        3.84875845,  3.78352606,  3.71829367,  3.6530613 ,  3.58782895,
        3.52259661,  3.45736429,  3.39213199,  3.3268997 ,  3.26166744,
        3.1964352 ,  3.13120298,  3.06597079,  3.00073863,  2.93550649,
        2.87027438,  2.80504231,  2.73981027,  2.67457826,  2.6093463 ,
        2.54411438,  2.47888251,  2.41365068,  2.34841891,  2.2831872 ,
        2.21795555,  2.15272398,  2.08749248,  2.02226106,  1.95702973,
        1.89179851,  1.8265674 ,  1.76133642,  1.69610557,  1.63087488,
        1.56564437,  1.50041405,  1.43518396,  1.36995413,  1.3047246 ,
        1.23949541,  1.17426662,  1.10903831,  1.04381055,  0.97858347,
        0.9133572 ,  0.84813194,  0.78290793,  0.71768552,  0.65246519,
        0.58724763,  0.52203388,  0.45682556,  0.39162541,  0.32643829,
        0.26127399,  0.19615522,  0.13114983,  0.06659072])

ks.sort()

for f in args:
    npz = n.load(f)
    bls = npz.files
    bls.sort()
    nks = len(npz[bls[0]])
    if opts.fold: nks /= 2
    data = n.zeros((nks,len(bls)))
    for ind,bl in enumerate(bls):
        if opts.fold: data[:,ind] = (npz[bl][:nks] + npz[bl][:-nks])/2 
        else: data[:,ind] = npz[bl]
    p.imshow(n.log10(n.abs(data)),aspect='auto',interpolation='nearest',origin='lower')
    p.colorbar()
    p.show()
